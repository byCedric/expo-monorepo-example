name: preview

on:
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Find changed apps
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.head.repo.full_name == 'bycedric/eas-monorepo-example' }}
    outputs:
      apps: ${{ steps.filter.outputs.changes }}
    steps:
      - id: filter
        name: 🕵️ Detect changed apps
        uses: dorny/paths-filter@v2
        with:
          filters: |
            managed: apps/managed
            with-sentry: apps/with-sentry

  preview:
    needs: changes
    name: Publish preview
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJSON('["managed"]') }}
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }} # Required for apps/with-sentry
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2
      - name: 🏗 Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn
      - name: 🏗 Setup Expo
        uses: expo/expo-github-action@master
        with:
          expo-version: 5.x
          token: ${{ secrets.EXPO_TOKEN }}
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile --check-files
      - name: 👷 Build packages
        run: yarn build
      - name: 🚀 Publish to Expo
        working-directory: apps/${{ matrix.app }}
        run: expo publish --release-channel=pr-${{ github.event.number }}
      - name: 💬 Comment deployment link
        uses: actions/github-script@v4
        with:
          script: |
            // Load manifest to fetch project info
            const app = '${{ matrix.app }}';
            const manifest = require(`./apps/${app}/app.json`);

            // Get the app information and build links
            const { owner, slug } = manifest.expo;
            const releaseChannel = `pr-${context.issue.number}`;
            const project = `@${owner}/${slug}?release-channel=${releaseChannel}`;
            const projectLink = `https://expo.dev/${project}`;
            const projectQR = `https://qr.expo.dev/expo-go?owner=${owner}&slug=${slug}&releaseChannel=${releaseChannel}`;

            // Add the comment
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `You can preview [\`apps/${app}\` here](${projectLink}).<br><br><a href="${projectLink}"><img src="${projectQR}" height="200px" width="200px"></a>`
            });
