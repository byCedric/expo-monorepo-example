name: preview
on: [pull_request]
concurrency:
  group: publish-pr-${{ github.event.number }}
  cancel-in-progress: true
jobs:
  changes:
    name: Find changed apps
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == 'bycedric/eas-monorepo-example'
    outputs:
      appChanged: ${{ steps.filter.outputs.apps == 'true' }}
      appNames: ${{ steps.result.outputs.result }}
    steps:
      - id: filter
        name: 🕵️ Detect changes
        uses: dorny/paths-filter@v2
        with:
          list-files: json
          filters: |
            apps: 'apps/**'
      - id: result
        name: 📱 Find changed apps
        uses: actions/github-script@v5
        if: steps.filter.outputs.apps == 'true'
        with:
          debug: true
          script: |
            // Load all changed files to dynamically fetch the app names
            const path = require('path')
            const changes = ${{ steps.filter.outputs.apps_files }}
            // Iterate through all changes and keep unique app names
            return [...new Set(changes.map(file => path.dirname(file).split('/')[1]))]
  preview:
    needs: changes
    name: Publish preview
    runs-on: ubuntu-latest
    if: needs.changes.outputs.appChanged
    strategy:
      matrix:
        appName: ${{ fromJSON(needs.changes.outputs.appNames) }}
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }} # Required for apps/with-sentry
    steps:
      - name: 🏗️ Setup repo
        uses: actions/checkout@v2
      - name: 🏗️ Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: 🏗️ Setup Expo
        uses: expo/expo-github-action@feature/comment-pr
        with:
          expo-version: 4.x
          expo-cache: true
          token: ${{ secrets.EXPO_TOKEN }}
      - name: 🔎 Find cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: ♻️ Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: 📋 Install dependencies
        run: yarn install --frozen-lockfile --check-files
      - name: 👷 Build packages
        run: yarn build
      - name: 🚀 Publish to Expo
        working-directory: apps/${{ matrix.appName }}
        run: expo publish --release-channel=pr-${{ github.event.number }}
      - name: 💬 Comment deployment link
        uses: expo/expo-github-action/comment-pr@feature/comment-pr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          project-root: apps/${{ matrix.appName }}
          release-channel: pr-${{ github.event.number }}
